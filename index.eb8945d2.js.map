{"mappings":"AAAA,MAAMA,EAAO,CACbC,KAAMC,SAASC,cAAc,aAC7BC,MAAOF,SAASC,cAAc,aAC9BE,MAAOH,SAASC,cAAc,aAC9BG,MAAOJ,SAASC,cAAc,kBAG9BH,EAAKM,MAAMC,iBAAiB,QAASC,QAAQF,OAI7CN,EAAKC,KAAKM,iBAAiB,SAAS,KAClC,MAAME,EAAQC,GACL,IAAIC,SAAQ,KAChBC,YAAW,KACNC,EAAOH,EAAG,GACXA,EAAG,IAING,EAASC,GAAQN,QAAQO,IAAI,kBAAkBD,OAErDL,EAAM,KAAMO,KAAKH,GACjBJ,EAAM,KAAMO,KAAKH,GACjBJ,EAAM,MAAMO,KAAKH,EAAO,IAK1B,MAAMI,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGzBnB,EAAKI,MAAMG,iBAAiB,SAAS,KACnC,MAAMa,EAAkB,CAACC,EAAUC,IAC1B,IAAIX,SAASY,IAClB,MAAMC,EAAeH,EAASI,KAAIC,GAChCA,EAAKR,OAASI,EAAW,IAAKI,EAAMP,QAASO,EAAKP,QAAWO,IAE/DH,EAAQZ,QAAQgB,IAAIH,GAAc,IAKhCI,EAAYJ,GAAgBhB,QAAQqB,MAAML,GAChDJ,EAAgBH,EAAO,SAASD,KAAKY,GACrCR,EAAgBH,EAAO,OAAOD,KAAKY,EAAU,IAK/C5B,EAAKK,MAAME,iBAAiB,SAAS,KACnC,MAIMuB,EAAmBC,IACvB,MAAMtB,GAL2BuB,EAKO,IALFC,EAKO,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADpB,IAACA,EAAKC,EAMtC,OAAO,IAAItB,SAAQ,CAACY,EAASc,KAC3BzB,YAAW,KACUsB,KAAKE,SAAW,GAElCb,EAAQ,CAACe,GAAIP,EAAYO,GAAIxB,KAAML,IAElC4B,EAAON,EAAYO,GAAG,GAEvB7B,EAAM,GACT,EAGE8B,EAAa,EAACD,GAACA,EAAExB,KAAEA,MACvBN,QAAQO,IAAI,eAAeuB,kBAAmBxB,MAAS,EAGnD0B,EAAWF,IACf9B,QAAQiC,KAAK,gCAAgCH,6BAA8B,EAE7ER,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MACjC1B,KAAKuB,GACLI,MAAMH,GAETV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAC/B1B,KAAKuB,GACLI,MAAMH,GAETV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,KAC/B1B,KAAKuB,GACLI,MAAMH,GAETV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAC/B1B,KAAKuB,GACLI,MAAMH,EAAS","sources":["src/tasks/app.js"],"sourcesContent":["const refs = {\ntask: document.querySelector('.boxTask1'),\ntask2: document.querySelector('.boxTask2'),\ntask3: document.querySelector('.boxTask3'),\nclear: document.querySelector('.consoleClear')\n};\n\nrefs.clear.addEventListener('click', console.clear)\n\n// Task 1\n\nrefs.task.addEventListener('click', () => {\n  const delay = ms => {\n    return new Promise(() => {\n       setTimeout(() => {\n            logger(ms);\n        }, ms);\n    });\n  };\n\n  const logger = time => console.log(`Resolved after ${time}ms`);\n     // Вызовы функции для проверки\n  delay(2000).then(logger); // Resolved after 2000ms\n  delay(1000).then(logger); // Resolved after 1000ms\n  delay(1500).then(logger); // Resolved after 1500ms\n  });\n\n// Task 2\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nrefs.task2.addEventListener('click', () => {\n  const toggleUserState = (allUsers, userName) => {\n    return new Promise((resolve)=> {\n      const updatedUsers = allUsers.map(user =>\n        user.name === userName ? { ...user, active: !user.active } : user,\n      );\n      resolve(Promise.all(updatedUsers));\n    })\n  \n  };\n  \n  const Thelogger = updatedUsers => console.table(updatedUsers);\n  toggleUserState(users, 'Mango').then(Thelogger);\n  toggleUserState(users, 'Lux').then(Thelogger);\n});\n\n//Task 3\n\nrefs.task3.addEventListener('click', () =>{\n  const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  \n  const makeTransaction = (transaction) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const canProcess = Math.random() > 0.3;\n        if (canProcess) {\n         resolve({id: transaction.id, time: delay});\n          } else {\n          reject(transaction.id);\n        }\n      }, delay);\n    })\n  };\n  \n  const logSuccess = ({id, time}) => {\n    console.log(`Transaction ${id} processed in ${time}ms`);\n  };\n  \n  const logError = id => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n  };\n  makeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n})\n"],"names":["$4d6f516c24c8da6e$var$refs","task","document","querySelector","task2","task3","clear","addEventListener","console","delay","ms","Promise","setTimeout","logger","time","log","then","$4d6f516c24c8da6e$var$users","name","active","toggleUserState","allUsers","userName","resolve","updatedUsers","map","user","all","Thelogger","table","makeTransaction","transaction","min","max","Math","floor","random","reject","id","logSuccess","logError","warn","amount","catch"],"version":3,"file":"index.eb8945d2.js.map"}